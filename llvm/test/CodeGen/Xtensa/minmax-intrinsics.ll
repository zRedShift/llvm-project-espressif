; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=xtensa -mcpu=esp32 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=XTENSA %s

declare i32 @llvm.smin.i32(i32, i32)

define i32 @smin_i32(i32 %a, i32 %b) {
; XTENSA-LABEL: smin_i32:
; XTENSA:       # %bb.0:
; XTENSA-NEXT:    entry a1, 32
; XTENSA-NEXT:    .cfi_def_cfa_offset 32
; XTENSA-NEXT:    min a2, a2, a3
; XTENSA-NEXT:    retw.n
  %1 = tail call i32 @llvm.smin.i32(i32 %a, i32 %b)
  ret i32 %1
}

declare i32 @llvm.smax.i32(i32, i32)

define i32 @smax_i32(i32 %a, i32 %b) {
; XTENSA-LABEL: smax_i32:
; XTENSA:       # %bb.0:
; XTENSA-NEXT:    entry a1, 32
; XTENSA-NEXT:    .cfi_def_cfa_offset 32
; XTENSA-NEXT:    max a2, a2, a3
; XTENSA-NEXT:    retw.n
  %1 = tail call i32 @llvm.smax.i32(i32 %a, i32 %b)
  ret i32 %1
}

declare i32 @llvm.umin.i32(i32, i32)

define i32 @umin_i32(i32 %a, i32 %b) {
; XTENSA-LABEL: umin_i32:
; XTENSA:       # %bb.0:
; XTENSA-NEXT:    entry a1, 32
; XTENSA-NEXT:    .cfi_def_cfa_offset 32
; XTENSA-NEXT:    minu a2, a2, a3
; XTENSA-NEXT:    retw.n
  %1 = tail call i32 @llvm.umin.i32(i32 %a, i32 %b)
  ret i32 %1
}

declare i32 @llvm.umax.i32(i32, i32)

define i32 @umax_i32(i32 %a, i32 %b) {
; XTENSA-LABEL: umax_i32:
; XTENSA:       # %bb.0:
; XTENSA-NEXT:    entry a1, 32
; XTENSA-NEXT:    .cfi_def_cfa_offset 32
; XTENSA-NEXT:    maxu a2, a2, a3
; XTENSA-NEXT:    retw.n
  %1 = tail call i32 @llvm.umax.i32(i32 %a, i32 %b)
  ret i32 %1
}
